server.port=8081

spring.application.name=STOCK-SERVICE

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=stock_group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.topic.name=order_topics

spring.datasource.url=jdbc:mysql://localhost:3306/orders_stock_db
spring.datasource.username=root
spring.datasource.password=rootroot

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
spring.jpa.hibernate.ddl-auto=update

management.endpoints.web.exposure.include=*
management.info.env.enabled=true
management.endpoint.health.show-details=always

info.app.name=consumer, aka stock service
info.app.description=event driven proiect, consumer ce ia de la order service, si baga in db
